// Generated by CoffeeScript 1.6.3
var db;

db = require('./db')("" + __dirname + "/../db/test");

module.exports = {
  /*
  `get(id, [options], callback)`
  ----------------------------
  Return an array of metrics.
  
  Parameters
  `id`        Metric id as integer
  `callback`  Contains an err as first argument 
              if any
  
  Options
  `start`     Timestamp
  `end`       Timestamp
  `timestamp` Step between each metrics 
              in milliseconds
  */

  get: function(id, options, callback) {
    var metrics, rs;
    if (arguments.length === 2) {
      callback = options;
    }
    metrics = [];
    rs = db.createReadStream({
      start: "metric:" + id + ":",
      stop: "metric:" + id + ";"
    });
    rs.on('data', function(data) {
      var timestamp, _, _ref;
      _ref = data.key.split(':'), _ = _ref[0], id = _ref[1], timestamp = _ref[2];
      return metrics.push({
        id: id,
        timestamp: parseInt(timestamp, 10),
        value: data.value
      });
    });
    rs.on('error', callback);
    return rs.on('close', function() {
      return callback(null, metrics);
    });
  },
  /*
  `save(id, metrics, callback)`
  ----------------------------
  
  Parameters
  `id`       Metric id as integer
  `metrics`  Array with timestamp as keys 
             and integer as values
  `callback` Contains an err as first argument 
             if any
  */

  save: function(id, metrics, callback) {
    var metric, timestamp, value, ws, _i, _len;
    ws = db.createWriteStream();
    ws.on('error', callback);
    ws.on('close', callback);
    for (_i = 0, _len = metrics.length; _i < _len; _i++) {
      metric = metrics[_i];
      timestamp = metric.timestamp, value = metric.value;
      ws.write({
        key: "metric:" + id + ":" + timestamp,
        value: value
      });
    }
    return ws.end();
  }
};
